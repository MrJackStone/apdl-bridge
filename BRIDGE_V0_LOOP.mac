! Get current directory
*del,mainFolder
/inquire,mainFolder,DIRECTORY

! File base name ('CONC' for concrete girders, 'STL' for steel girders)
*del,baseName
*dim,baseName,STRING,248
*if,MAT_Girder_type,EQ,0,THEN
   baseName(1)='CONC'
*elseif,MAT_Girder_type,EQ,1,THEN
   baseName(1)='STL'
*endif

! Positions of the centerline of the load train
*vscfun,ltLeft,MIN,LOAD_ltOffsetTemplate
*vscfun,ltRight,MAX,LOAD_ltOffsetTemplate
LTPosCount=2
*del,LOOP_offsets
*dim,LOOP_offsets,ARRAY,LTPosCount
LOOP_offsets(1)=(-GEO_deckWidth/2)-(ltLeft)
LOOP_offsets(2)=0

! Deck occupation scenarios
*if,LOAD_transScenario,EQ,6,THEN
   LOOP_ScenarioCount=6
   *del,LOOP_LOAD_transScenario
   *dim,LOOP_LOAD_transScenario,ARRAY,LOOP_ScenarioCount
   LOOP_LOAD_transScenario(1)=0,1,2,3,4,5
*elseif,LOAD_transScenario,EQ,7,THEN
   LOOP_ScenarioCount=4
   *del,LOOP_LOAD_transScenario
   *dim,LOOP_LOAD_transScenario,ARRAY,LOOP_ScenarioCount
   LOOP_LOAD_transScenario(1)=0,1,3,4
*else
   LOOP_ScenarioCount=1
   *del,LOOP_LOAD_transScenario
   *dim,LOOP_LOAD_transScenario,ARRAY,LOOP_ScenarioCount
   LOOP_LOAD_transScenario(1)=LOAD_transScenario
*endif

! Initialize counter
bridgeIndex=0

! Initialize results table
*del,BridgeTable
*dim,BridgeTable,ARRAY,LOOP_LengthCount,15

! Loop: bridge length
*do,nthLength,1,LOOP_LengthCount,1

   ! Clear arrays
   *del,SupportsTable_FX
   *del,SupportsTable_FY
   *del,SupportsTable_FZ

   ! Folder name (partial)
   *del,name1
   *dim,name1,STRING,248
   name1(1)=STRCAT(baseName(1),STRCAT('_L',CHRVAL(nthLength)))

   ! Initialize array
   *del,BridgeMax
   *dim,BridgeMax,ARRAY,14
   *vfill,BridgeMax,RAMP,0,0

   ! Loop: load scenario (transversal deck occupation)
   *do,nthScenario,1,LOOP_ScenarioCount,1

      ! Folder name (partial)
      *del,name2
      *dim,name2,STRING,248
      name2(1)=STRCAT(name1(1),STRCAT('_S',CHRVAL(nthScenario)))

      ! Bridge length
      GEO_deckLength=LOOP_GEO_deckLength(nthLength)
      ! Deck occupation
      LOAD_transOption=LOOP_LOAD_transScenario(nthScenario)

      ! Loop: load train positions
      *do,nthLTPos,1,LTPosCount,1

         ! Folder name (partial)
         *del,name3
         *dim,name3,STRING,248
         name3(1)=STRCAT(name2(1),STRCAT('_P',CHRVAL(nthLTPos)))

         ! Create folder
         *del,folderName
         *dim,folderName,STRING,248
         folderName(1)=name3(1)
         /syp,mkdir,folderName(1)
         /cwd,'%folderName(1)%'

         ! Load train positions (measured from the center of the deck)
         oCenter=LOOP_offsets(nthLTPos)
         *del,LOAD_ltOffsets
         *voper,LOAD_ltOffsets,LOAD_ltOffsetTemplate,ADD,oCenter

         ! Solve model
         BRIDGE_MODEL_V4
         ! Collect results
         BRIDGE_POST_V4
         BRIDGE_COMPILE_V4

         *voper,BridgeMax,BridgeMax,MAX,BridgeRes

         SAVE,,,,ALL
         ! Clear the model
         BRIDGE_CLEAR_V4
         /delete,FileName(1),'rst'
         /delete,FileName(1),'grph'
         /delete,FileName(1),'full'
         /cwd,'%mainFolder(1)%'

      *enddo

   *enddo

   bridgeIndex=bridgeIndex+1
   BridgeTable(bridgeIndex,1)=bridgeIndex
   *do,i,1,14,1
      BridgeTable(bridgeIndex,i+1)=BridgeMax(i)
   *enddo

*enddo

! Convert to columns
*del,c1
*del,c2
*del,c3
*del,c4
*del,c5
*del,c6
*del,c7
*del,c8
*del,c9
*del,c10
*del,c11
*del,c12
*del,c13
*del,c14
*del,c15
*dim,c1,ARRAY,LOOP_LengthCount
*dim,c2,ARRAY,LOOP_LengthCount
*dim,c3,ARRAY,LOOP_LengthCount
*dim,c4,ARRAY,LOOP_LengthCount
*dim,c5,ARRAY,LOOP_LengthCount
*dim,c6,ARRAY,LOOP_LengthCount
*dim,c7,ARRAY,LOOP_LengthCount
*dim,c8,ARRAY,LOOP_LengthCount
*dim,c9,ARRAY,LOOP_LengthCount
*dim,c10,ARRAY,LOOP_LengthCount
*dim,c11,ARRAY,LOOP_LengthCount
*dim,c12,ARRAY,LOOP_LengthCount
*dim,c13,ARRAY,LOOP_LengthCount
*dim,c14,ARRAY,LOOP_LengthCount
*dim,c15,ARRAY,LOOP_LengthCount
*do,i,1,LOOP_LengthCount,1
   c1(i)=BridgeTable(i,1)
   c2(i)=BridgeTable(i,2)
   c3(i)=BridgeTable(i,3)
   c4(i)=BridgeTable(i,4)
   c5(i)=BridgeTable(i,5)
   c6(i)=BridgeTable(i,6)
   c7(i)=BridgeTable(i,7)
   c8(i)=BridgeTable(i,8)
   c9(i)=BridgeTable(i,9)
   c10(i)=BridgeTable(i,10)
   c11(i)=BridgeTable(i,11)
   c12(i)=BridgeTable(i,12)
   c13(i)=BridgeTable(i,13)
   c14(i)=BridgeTable(i,14)
   c15(i)=BridgeTable(i,15)
*enddo


! Write results
*cfopen,'RESUMO',txt
   *vwrite,
   ('     ;              ;       GIRDER ;       GIRDER ;       GIRDER ;       GIRDER ;       GIRDER ;         SLAB ;         SLAB ;         SLAB ;         SLAB ;         SLAB ;         SLAB ;         SLAB ;         SLAB ;')
   *vwrite,
   ('   # ;        L [m] ;     M+ [kNm] ;     M- [kNm] ;       Q [kN] ;       N [kN] ;      UZ [mm] ;  MX+ [kNm/m] ;  MX- [kNm/m] ;  MY+ [kNm/m] ;  MY- [kNm/m] ;     Q [kN/m] ;    NX [kN/m] ;    NY [kN/m] ;      UZ [mm] ;')
   *vwrite,c1(1),c2(1),c3(1),c4(1),c5(1),c6(1),c7(1),c8(1),c9(1),c10(1),c11(1),c12(1),c13(1),c14(1),c15(1)
   (F5.0,TL1,' ; ',F12.5,' ; ',F12.2,' ; ',F12.2,' ; ',F12.2,' ; ',F12.2,' ; ',F12.4,' ; ',F12.2,' ; ',F12.2,' ; ',F12.2,' ; ',F12.2,' ; ',F12.2,' ; ',F12.2,' ; ',F12.2,' ; ',F12.4,' ;')
*cfclos

!!
*cfopen,'COMPILATION_GIRDER',txt
   *vwrite,
   ('   # ;        L [m] ;    My+ [kNm] ;    My- [kNm] ;      Qz [kN] ;      Nt [kN] ;      Nc [kN] ;      Uz [mm] ;')
*cfclos

*cfopen,'COMPILATION_SLAB',txt
   *vwrite,
   ('   # ;        L [m] ;  Mx+ [kNm/m] ;  Mx- [kNm/m] ;  My+ [kNm/m] ;  My- [kNm/m] ;     Q [kN/m] ;   Nxt [kN/m] ;   Nxc [kN/m] ;   Nyt [kN/m] ;   Nyc [kN/m] ;      Uz [mm] ;')
*cfclos

*cfopen,'COMPILATION_FRAMEGIRDER',txt
   *vwrite,
   ('   # ;        L [m] ;    My+ [kNm] ;    My- [kNm] ;     Mz [kNm] ;     MT [kNm] ;      Qz [kN] ;      Qy [kN] ;      Nt [kN] ;      Nc [kN] ;      Ux [mm] ;      Uy [mm] ;      Uz [mm] ;')
*cfclos

*cfopen,'COMPILATION_COLUMN',txt
   *vwrite,
   ('   # ;        L [m] ;     My [kNm] ;     Mz [kNm] ;     MT [kNm] ;      Qz [kN] ;      Qy [kN] ;      Nc [kN] ;      Nt [kN] ; Ux,base [mm] ; Uy,base [mm] ; Uz,base [mm] ; Ux,topo [mm] ; Uy,topo [mm] ; Uz,topo [mm] ;')
*cfclos

*cfopen,'COMPILATION_GRADEBEAM',txt
   *vwrite,
   ('   # ;        L [m] ;    My+ [kNm] ;    My- [kNm] ;     Mz [kNm] ;     MT [kNm] ;      Qz [kN] ;      Qy [kN] ;      Nt [kN] ;      Nc [kN] ;      Uz [mm] ;')
*cfclos

*cfopen,'COMPILATION_PILE',txt
   *vwrite,
   ('   # ;        L [m] ;      M [kNm] ;     MT [kNm] ;       Q [kN] ;      Nc [kN] ;      Nt [kN] ;      Ux [mm] ;      Uy [mm] ;      Uz [mm] ;')
*cfclos
!!


*if,DISPLAY_MODE,EQ,1,THEN
   /window,1,ON
   VIEW1W
*endif




