! BRIDGE_V1_EARTHPRES, loadType
! BRIDGE_V1_EARTHPRES,     arg1

! arg1: loadType  -  [0] dead / [1] dead+live / [2] live only

! Determine which type of load to apply
*if,arg1,eq,0,then
    dead_check=1
    live_check=0
*elseif,arg1,eq,1,then
    dead_check=1
    live_check=1
*elseif,arg1,eq,2,then
    dead_check=0
    live_check=1
*endif

allsel

! Calculate global Z coordinate at the surface level of each abutment
*del,tmp
*del,LOAD_ABT1_topLevel
*voper,               tmp, NLIST_x, mult, ABT1_angCoef
*voper,LOAD_ABT1_topLevel, tmp    , add , ABT1_linCoef

*del,tmp
*del,LOAD_ABT2_topLevel
*voper,               tmp, NLIST_x, mult, ABT2_angCoef
*voper,LOAD_ABT2_topLevel, tmp    , add , ABT2_linCoef

! Calculate soil height above each node
*del,LOAD_ABT1_h
*voper,LOAD_ABT1_h,LOAD_ABT1_topLevel,sub,NLIST_z !! very conservative for ABT_TYPE=4

*del,LOAD_ABT2_h
*voper,LOAD_ABT2_h,LOAD_ABT2_topLevel,sub,NLIST_z

! Calculate vertical effective pressures
*del,tmp
*del,LOAD_ABT1_sigmaV
*voper,tmp             , LOAD_ABT1_h, mult, dead_check*(MAT_ABT_soil_dens*LOAD_g)
*voper,tmp             , tmp        , add , dead_check*(MAT_Approach_dens*LOAD_g*SEC_ABT_appSlab_t*GEO_ABT1_appSlab)
*voper,LOAD_ABT1_sigmaV, tmp        , add , live_check*(LOAD_pav+LOAD_vehicleTraffic)

*del,tmp
*del,LOAD_ABT2_sigmaV
*voper,tmp             , LOAD_ABT2_h, mult, dead_check*(MAT_ABT_soil_dens*LOAD_g)
*voper,tmp             , tmp        , add , dead_check*(MAT_Approach_dens*LOAD_g*SEC_ABT_appSlab_t*GEO_ABT2_appSlab)
*voper,LOAD_ABT2_sigmaV, tmp        , add , live_check*(LOAD_pav+LOAD_vehicleTraffic)

! Calculate horizontal pressures
*del,tmp
*del,LOAD_ABT1_sigmaH
*voper,tmp             , LOAD_ABT1_sigmaV, mult, MAT_ABT_Soil_Ka
*voper,tmp             , tmp             , sub , 2*MAT_ABT_Soil_c*sqrt(MAT_ABT_Soil_Ka)
*voper,LOAD_ABT1_sigmaH, tmp             , max , 0

*del,tmp
*del,LOAD_ABT2_sigmaH
*voper,tmp             , LOAD_ABT2_sigmaV, mult, MAT_ABT_Soil_Ka
*voper,tmp             , tmp             , sub , 2*MAT_ABT_Soil_c*sqrt(MAT_ABT_Soil_Ka)
*voper,LOAD_ABT2_sigmaH, tmp             , max , 0

! Calculate vertical and horizontal forces
*voper, LOAD_ABT1_Fv , LOAD_ABT1_sigmaV , mult , NLIST_apportioned
*voper, LOAD_ABT1_Fh , LOAD_ABT1_sigmaH , mult , NLIST_apportioned
*voper, LOAD_ABT2_Fv , LOAD_ABT2_sigmaV , mult , NLIST_apportioned
*voper, LOAD_ABT2_Fh , LOAD_ABT2_sigmaH , mult , NLIST_apportioned

*if,GEO_ABT1_status,eq,1,then
    ! Apply stress increases on first abutment

    ! Longitudinal wall and wing (right side, Y<0)
    cmsel,s,COMPA_ABT_longWalls
    cmsel,a,COMPA_ABT_wings
    cmsel,r,COMPA_ABT_1
    csys,CS_ABT1
    asel,r,loc,y,-1e6,0
    csys,0
    nsla,s,1
    *if,GEO_ABT1_type,eq,4,then
      *afun,deg
      nslcomp,'F_hx','N_n','nc','LOAD_ABT1_Fh',-sin(GEO_ABT1_wingAngle)
      nslcomp,'F_hy','N_n','nc','LOAD_ABT1_Fh',-cos(GEO_ABT1_wingAngle)
      f, N_n(1:nc), fx, F_hx(1:nc)
      f, N_n(1:nc), fy, F_hy(1:nc)
      *afun,rad
    *else
      nslcomp,'F_h','N_n','nc','LOAD_ABT1_Fh',-1
      f, N_n(1:nc), fy, F_h(1:nc)
    *endif

    ! Longitudinal wall and wing (left side, Y>0)
    cmsel,s,COMPA_ABT_longWalls
    cmsel,a,COMPA_ABT_wings
    cmsel,r,COMPA_ABT_1
    csys,CS_ABT1
    asel,r,loc,y,0,1e6
    csys,0
    nsla,s,1
    *if,GEO_ABT1_type,eq,4,then
      *afun,deg
      nslcomp,'F_hx','N_n','nc','LOAD_ABT1_Fh',-sin(GEO_ABT1_wingAngle)
      nslcomp,'F_hy','N_n','nc','LOAD_ABT1_Fh',cos(GEO_ABT1_wingAngle)
      f, N_n(1:nc), fx, F_hx(1:nc)
      f, N_n(1:nc), fy, F_hy(1:nc)
      *afun,rad
    *else
      nslcomp,'F_h','N_n','nc','LOAD_ABT1_Fh',1
      f, N_n(1:nc), fy, F_h(1:nc)
    *endif

    ! Transversal wall
    cmsel,s,COMPA_ABT_tranWall
    cmsel,r,COMPA_ABT_1
    nsla,s,1
    nslcomp,'F_h','N_n','nc','LOAD_ABT1_Fh',1
    f, N_n(1:nc), fx, F_h(1:nc)

    ! Pile cap
    cmsel,s,COMPA_ABT_pileCap
    cmsel,r,COMPA_ABT_1
    nsla,s,1
    nslcomp,'F_v','N_n','nc','LOAD_ABT1_Fv',-1
    f, N_n(1:nc), fz, F_v(1:nc)

    *if,GEO_ABT1_type,eq,3,and,GEO_ABT1_pileFree,gt,0,then
        ! Pile curtain: transversal wall
        cmsel,s,COMPL_ABT_twPiles
        esll,s
        nsle,s,active
        cmsel,r,COMPN_ABT1_pileFree
        nslcomp,'F_h','N_n','nc','LOAD_ABT1_Fh',1
        f, N_n(1:nc), fx, F_h(1:nc)

        ! Pile curtain: longitudinal wall (Y<0)
        cmsel,s,COMPL_ABT_lwPiles
        esll,s
        nsle,s,active
        cmsel,r,COMPN_ABT1_pileFree
        csys,CS_ABT1
        nsel,r,loc,y,0,-1e6
        csys,0
        nslcomp,'F_h','N_n','nc','LOAD_ABT1_Fh',-1
        f, N_n(1:nc), fy, F_h(1:nc)

        ! Pile curtain: longitudinal wall (Y>0)
        cmsel,s,COMPL_ABT_lwPiles
        esll,s
        nsle,s,active
        cmsel,r,COMPN_ABT1_pileFree
        csys,CS_ABT1
        nsel,r,loc,y,0,1e6
        csys,0
        nslcomp,'F_h','N_n','nc','LOAD_ABT1_Fh',1
        f, N_n(1:nc), fy, F_h(1:nc)

    *endif

*endif

*if,GEO_ABT2_status,eq,1,then
    ! Apply stress increases on second abutment

    ! Longitudinal wall and wing (right side, Y<0)
    cmsel,s,COMPA_ABT_longWalls
    cmsel,a,COMPA_ABT_wings
    cmsel,r,COMPA_ABT_2
    csys,CS_ABT2
    asel,r,loc,y,-1e6,0
    csys,0
    nsla,s,1
    *if,GEO_ABT2_type,eq,4,then
      *afun,deg
      nslcomp,'F_hx','N_n','nc','LOAD_ABT2_Fh',-sin(GEO_ABT2_wingAngle)
      nslcomp,'F_hy','N_n','nc','LOAD_ABT2_Fh',-cos(GEO_ABT2_wingAngle)
      f, N_n(1:nc), fx, F_hx(1:nc)
      f, N_n(1:nc), fy, F_hy(1:nc)
      *afun,rad
    *else
      nslcomp,'F_h','N_n','nc','LOAD_ABT2_Fh',-1
      f, N_n(1:nc), fy, F_h(1:nc)
    *endif

    ! Longitudinal wall and wing (left side, Y>0)
    cmsel,s,COMPA_ABT_longWalls
    cmsel,a,COMPA_ABT_wings
    cmsel,r,COMPA_ABT_2
    csys,CS_ABT2
    asel,r,loc,y,0,1e6
    csys,0
    nsla,s,1
    *if,GEO_ABT2_type,eq,4,then
      *afun,deg
      nslcomp,'F_hx','N_n','nc','LOAD_ABT2_Fh',-sin(GEO_ABT2_wingAngle)
      nslcomp,'F_hy','N_n','nc','LOAD_ABT2_Fh',cos(GEO_ABT2_wingAngle)
      f, N_n(1:nc), fx, F_hx(1:nc)
      f, N_n(1:nc), fy, F_hy(1:nc)
      *afun,rad
    *else
      nslcomp,'F_h','N_n','nc','LOAD_ABT2_Fh',1
      f, N_n(1:nc), fy, F_h(1:nc)
    *endif

    ! Transversal wall
    cmsel,s,COMPA_ABT_tranWall
    cmsel,r,COMPA_ABT_2
    nsla,s,1
    nslcomp,'F_h','N_n','nc','LOAD_ABT2_Fh',-1
    f, N_n(1:nc), fx, F_h(1:nc)

    ! Pile cap
    cmsel,s,COMPA_ABT_pileCap
    cmsel,r,COMPA_ABT_2
    nsla,s,1
    nslcomp,'F_v','N_n','nc','LOAD_ABT2_Fv',-1
    f, N_n(1:nc), fz, F_v(1:nc)

    *if,GEO_ABT2_type,eq,3,and,GEO_ABT2_pileFree,gt,0,then
        ! Pile curtain: transversal wall
        cmsel,s,COMPL_ABT_twPiles
        esll,s
        nsle,s,active
        cmsel,r,COMPN_ABT2_pileFree
        nslcomp,'F_h','N_n','nc','LOAD_ABT2_Fh',-1
        f, N_n(1:nc), fx, F_h(1:nc)

        ! Pile curtain: longitudinal wall (Y<0)
        cmsel,s,COMPL_ABT_lwPiles
        esll,s
        nsle,s,active
        cmsel,r,COMPN_ABT2_pileFree
        csys,CS_ABT2
        nsel,r,loc,y,0,-1e6
        csys,0
        nslcomp,'F_h','N_n','nc','LOAD_ABT2_Fh',-1
        f, N_n(1:nc), fy, F_h(1:nc)

        ! Pile curtain: longitudinal wall (Y>0)
        cmsel,s,COMPL_ABT_lwPiles
        esll,s
        nsle,s,active
        cmsel,r,COMPN_ABT2_pileFree
        csys,CS_ABT2
        nsel,r,loc,y,0,1e6
        csys,0
        nslcomp,'F_h','N_n','nc','LOAD_ABT2_Fh',1
        f, N_n(1:nc), fy, F_h(1:nc)

    *endif

*endif

